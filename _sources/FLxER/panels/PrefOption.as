package FLxER.panels {	import flash.xml.*;	import FLxER.panels.Palette;	import FLxER.comp.ButtonTxt;	import FLxER.comp.CheckBoxBase;	import FLxER.main.Txt;	public class PrefOption extends Palette {		var myXml:XMLNode;		var cntObj:Object;		public function PrefOption(w:uint,h:uint,t:String,fnz:Function):void {			super(w,h,t,false);			//var mode0 = new ButtonTxt(50, 55, 150, 11, "CLONE MONITOR", fnz, 0, "");			//cntObj.addChild(mode0);			myXml = Preferences.pref.flxerPref; 			cntObj = new Object();			cntObj.chFLL		= new Txt(5, 25, 0, 11, "1) Number of channels", Preferences.pref.ts, null);			cntObj.chF 			= new Txt(125, 29, 20, 11, myXml.childNodes[0].childNodes[0].attributes.value, Preferences.pref.th, "input");			cntObj.chFL			= new Txt(150, 25, 0, 11, "ch (min 2 / max 7)", Preferences.pref.ts, null);			cntObj.netL 		= new Txt(5, 45, 0, 11, "If a media file is unavailable look for it on the net", Preferences.pref.ts, null);			var tmp:Boolean;			if (myXml.childNodes[0].childNodes[1].attributes.useServer == "false") {				tmp = false;			} else {				tmp = true;			}			trace ("LOAD FROM THE NET "+tmp)			cntObj.netB 		= new CheckBoxBase(250, 49, 11, 11, "LOAD FROM THE NET ", loadDvIn, null, tmp);			cntObj.ch 			= new Txt(5, 65, 0, 11, "Server", Preferences.pref.ts, null);			cntObj.netF 		= new Txt(50, 69, 300, 11, myXml.childNodes[0].childNodes[1].attributes.value, Preferences.pref.th, "input");			cntObj.kL 			= new Txt(5, 85, 0, 11, "View keyboard shortcuts baloon", Preferences.pref.ts, null);			if (myXml.childNodes[0].childNodes[2].attributes.value == "false") {				tmp = false;			} else {				tmp = true;			}			cntObj.kB 			= new CheckBoxBase(180, 89, 11, 11, "VIEW KEYBOARD SHORTCUT ", loadDvIn, null, tmp);			//			cntObj.treL 		= new Txt(5, 110, 0, 11, "3D ENGINE", Preferences.pref.ts, null);			cntObj.treL0 		= new Txt(15, 125, 0, 11, "Smooth Stop", Preferences.pref.ts, null);			if (myXml.childNodes[0].childNodes[4].attributes.smoothStop == "false") {				tmp = false;			} else {				tmp = true;			}			cntObj.smooth 		= new CheckBoxBase(140, 129, 11, 11, "SMOOTH STOP ", loadDvIn, null, tmp);			cntObj.treL1 		= new Txt(15, 140, 0, 11, "Alpha ", Preferences.pref.ts, null);			if (myXml.childNodes[0].childNodes[4].attributes.zalpha == "false") {				tmp = false;			} else {				tmp = true;			}			cntObj.myAlpha 		= new CheckBoxBase(140, 144, 11, 11, "ALPHA ", loadDvIn, null, tmp);			cntObj.treL2 		= new Txt(15, 155, 0, 11, "Z channels distance", Preferences.pref.ts, null);			cntObj.distance 	= new Txt(140, 159, 40, 11, myXml.childNodes[0].childNodes[4].attributes.zvalue, Preferences.pref.th, "input");			cntObj.treL3 		= new Txt(185, 155, 0, 11, "Z value", Preferences.pref.ts, null);			//" Z value"				cntObj.colL 		= new Txt(5, 175, 0, 11, "INTERFACE COLORS", Preferences.pref.ts, null);			cntObj.defaultWhite = new ButtonTxt(150, 180, 0, 11, "DEFAULT WHITE", resetCol, "w", null);			cntObj.defaultBlack = new ButtonTxt(250, 180, 0, 11, "DEFAULT BLACK", resetCol, "b", null);			cntObj.col 			= new Txt(5, 195, 0, 11, "Main color", Preferences.pref.ts, null);			cntObj.colF 		= new Txt(110, 200, 50, 11, myXml.childNodes[0].attributes.col, Preferences.pref.th, "input");			cntObj.bkgCol 		= new Txt(5, 210, 0, 11, "Backgrounds color", Preferences.pref.ts, null);			cntObj.bkgColF 		= new Txt(110, 215, 50, 11, myXml.childNodes[0].attributes.bkgCol, Preferences.pref.th, "input");			cntObj.bkgColOver 	= new Txt(5, 225, 0, 11, "Overs color", Preferences.pref.ts, null);			cntObj.bkgColOverF 	= new Txt(110, 230, 50, 11, myXml.childNodes[0].attributes.bkgColOver, Preferences.pref.th, "input");			cntObj.brdCol 		= new Txt(170, 195, 0, 11, "Borders color", Preferences.pref.ts, null);			cntObj.brdColF 		= new Txt(275, 200, 50, 11, myXml.childNodes[0].attributes.brdCol, Preferences.pref.th, "input");			cntObj.pltCol 		= new Txt(170, 210, 0, 11, "Palettes color", Preferences.pref.ts, null);			cntObj.pltColF 		= new Txt(275, 215, 50, 11, myXml.childNodes[0].attributes.pltCol, Preferences.pref.th, "input");			cntObj.monCol 		= new Txt(170, 225, 0, 11, "Monitor color", Preferences.pref.ts, null);			cntObj.monColF 		= new Txt(275, 230, 50, 11, myXml.childNodes[0].attributes.monCol, Preferences.pref.th, "input");				cntObj.pulsSave 	= new ButtonTxt(250, 245, 40, 11, "SAVE", mySave, null, null);			cntObj.pulsCancel 	= new ButtonTxt(300, 245, 40, 11, "CANCEL", myCancel, null, null);			cntObj.pulsReset 	= new ButtonTxt(350, 245, 40, 11, "RESET", myReset, null, null);			for (var item in cntObj) {				this.palette.addChild(cntObj[item])			}		}		function loadDvIn(p:Boolean):void {		}		function mySave(p:String):void {			if (parseInt(cntObj.chF.text)>1 && parseInt(cntObj.chF.text)<8) {				Preferences.pref.nCh =Preferences.pref.flxerPref.childNodes[0].childNodes[0].attributes.value = parseInt(cntObj.chF.text);			} else {				cntObj.chF.text = Preferences.pref.flxerPref.childNodes[0].childNodes[0].attributes.value;			}			trace ("LOAD FROM THE NET "+cntObj.netB.myStatus)			Preferences.pref.flxerPref.childNodes[0].childNodes[1].attributes.useServer = cntObj.netB.myStatus;			Preferences.pref.flxerPref.childNodes[0].childNodes[1].attributes.value = cntObj.netF.text;			Preferences.pref.vKS = Preferences.pref.flxerPref.childNodes[0].childNodes[2].attributes.value = cntObj.kB.myStatus;			Preferences.pref.flxerPref.childNodes[0].childNodes[4].attributes.smoothStop = cntObj.smooth.myStatus;			Preferences.pref.flxerPref.childNodes[0].childNodes[4].attributes.zalpha = cntObj.myAlpha.myStatus;			Preferences.pref.flxerPref.childNodes[0].childNodes[4].attributes.zvalue = cntObj.distance.text;			Preferences.pref.flxerPref.childNodes[0].attributes.col = cntObj.colF.text;			Preferences.pref.flxerPref.childNodes[0].attributes.bkgCol = cntObj.bkgColF.text;			Preferences.pref.flxerPref.childNodes[0].attributes.bkgColOver = cntObj.bkgColOverF.text;			Preferences.pref.flxerPref.childNodes[0].attributes.brdCol = cntObj.brdColF.text;			Preferences.pref.flxerPref.childNodes[0].attributes.pltCol = cntObj.pltColF.text;			Preferences.pref.flxerPref.childNodes[0].attributes.monCol = cntObj.monColF.text;			tmp = new XMLDocument(Preferences.pref.flxerPref.childNodes[0]);			Preferences.pref.flxerPref = tmp;			Preferences.updateCol()			parent.myPrefSO.data.flxerPref = tmp;			parent.myPrefSO.flush();			parent.reDraw()			parent.removeChild(this);			/*_root.mdf.updateCol();			if (Preferences.pref.flxerPref.childNodes[0].childNodes[2].attributes.value == "true") {				_global.vKS = true;			} else {				_global.vKS = false;			}			_root.myStarter.myPrefSO.data.flxerPref = tmp;			_root.myStarter.myPrefSO.flush();			if (myXml.childNodes[0].childNodes[0].attributes.value != _root.nCh) {				for (var item in _root) {					if (_root[item]._x != undefined) {						_root[item].removeMovieClip();					} else {						//delete _root[item]					}				}				_root.myStarter.interfaceDrawer();			} else {				this.removeMovieClip();			}*/		}		function resetCol(p:String):void {			trace("resetCol"+p)			var obj:Object;			if (p=="w") {				obj = Preferences.pref.colWhite;			} else {				obj = Preferences.pref.colBlack;			}			cntObj.colF.text = obj.col;			cntObj.bkgColF.text = obj.bkgCol;			cntObj.bkgColOverF.text = obj.bkgColOver;			cntObj.brdColF.text = obj.brdCol;			cntObj.pltColF.text = obj.pltCol;			cntObj.monColF.text = obj.monCol;		}		function myCancel(p:String):void {			parent.removeChild(this);		}		function myReset(p:String):void {			parent.resetta();		}	}}