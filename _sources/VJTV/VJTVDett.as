package VJTV {	import flash.display.Sprite;	import flash.display.Loader;	import flash.events.*;	import flash.net.URLRequest;	import FLxER.main.Rett;	import FLxER.main.Txt;	import FLxER.comp.ButtonTxt;	public class VJTVDett extends Sprite {		public var tit,dat,dur,aut,txt,cat,tag		var fondino,imgLoader, fnz,fnzMore,n,img,loadingProgress,myXml,chiudi		public function VJTVDett(f,ff):void {			fnz = f;			fnzMore = ff;			fondino = new Rett(0, 0, 400, 100, 0x000000, 0x666666, 1);			this.addChild(fondino);			tit = new Txt(144, -2, 126, 20, "Title", Preferences.pref.ts, "");			tit.scaleX=tit.scaleY = 2			this.addChild(tit);			chiudi = new ButtonTxt(400-12, 2, 10, 11, "X", hideInfo, -1, null);			this.addChild(chiudi);			dat = new Txt(147, 25, 350, 20, "dat", Preferences.pref.ts, "");			this.addChild(dat);			dur = new Txt(88, 25, 100, 20, "dur", Preferences.pref.ts, "");			this.addChild(dur);			aut = new Txt(147, 38, 150, 20, "aut", Preferences.pref.ts, "");			this.addChild(aut);			cat = new Txt(288, 38, 100, 20, "dat", Preferences.pref.ts, "");			this.addChild(cat);			txt = new Txt(147, 54, 252, 40, "dat", Preferences.pref.ts, "");			txt.wordWrap = true;			this.addChild(txt);			this.img = new Sprite();			img.x=img.y=10;			this.addChild(img);			var fond = new Rett(0, 0, 128, 96, 0xCCCCCC, -1, .5);			img.addChild(fond);			this.imgLoader = new Loader();			imgLoader.contentLoaderInfo.addEventListener(Event.INIT, initHandlerSWF);			imgLoader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR, errorHandlerSWF);			imgLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, errorHandlerSWF);			img.addChild(imgLoader);		}		public function hideInfo(a):void {			fnzMore(myXml,n);		}		public function riempi(xml,nn):void {			n = nn;			myXml = xml;			/*			fondino.alpha = (n == Preferences.pref.currentMedia ? 0 : 1);			var myDateA = myXml.childNodes[1].childNodes[1].nodeValue.split(",");			var myDate = new Date(myDateA[0],myDateA[1],myDateA[2],myDateA[3],myDateA[4],myDateA[5]);			trace("dat "+myDate.getFullYear()+"-"+putZero(myDate.getMonth()+1)+"-"+putZero(myDate.getDate())+" "+putZero(myDate.getHours())+":"+putZero(myDate.getMinutes()));			dat.htmlText = myDate.getFullYear()+"-"+putZero(myDate.getMonth()+1)+"-"+putZero(myDate.getDate())+" "+putZero(myDate.getHours())+":"+putZero(myDate.getMinutes());			*/			/*			trace("img "+myXml.childNodes[2].childNodes[0])			trace("tit "+myXml.childNodes[1].childNodes[0])			trace("dat "+myXml.childNodes[1].childNodes[1].childNodes[0]);			trace("dur "+Preferences.pref.interfaceTrgt.myTime(myXml.childNodes[1].childNodes[2].childNodes[0]));			trace("aut "+myXml.childNodes[1].childNodes[4].childNodes[0])			trace("cat "+myXml.childNodes[1].childNodes[5].childNodes[0])			trace("tag "+myXml.childNodes[1].childNodes[6].childNodes[0])			trace(this.tit)			*/			tit.htmlText = myXml.childNodes[1].childNodes[0]			dat.htmlText = myXml.childNodes[1].childNodes[1].childNodes[0].toString().split(" ")[0];			dur.htmlText = Preferences.pref.interfaceTrgt.myToolbar.myTime(int(parseInt(myXml.childNodes[1].childNodes[2].childNodes[0])/1000));			trace("txt "+myXml.childNodes[1].childNodes[3].childNodes[0])			txt.htmlText = myXml.childNodes[1].childNodes[3].childNodes[0];			txt.height = txt.textHeight			fondino.height = txt.height+txt.y+10			if (fondino.height < 120) fondino.height = 120;			trace("fondino.height "+fondino.height)			trace("Preferences.pref.h"+Preferences.pref.h)			setPos();			aut.htmlText = myXml.childNodes[1].childNodes[4].childNodes[0];			myXml.childNodes[1].childNodes[5].childNodes[0].attributes.href = "event:"+myXml.childNodes[1].childNodes[5].childNodes[0].attributes.href;			cat.htmlText = myXml.childNodes[1].childNodes[5].childNodes[0];			cat.addEventListener(TextEvent.LINK, linkHandler);			dur.x = 388-dur.textWidth			cat.x = 388-cat.textWidth			imgLoader.load(new URLRequest(myXml.childNodes[2].childNodes[0].toString()));			loadingProgress = true;			//tag.htmlText = myXml.childNodes[3].childNodes[0];		}		public function linkHandler(e):void {			Preferences.pref.interfaceTrgt.chCnt.paletteHideShow(e.text);		}		public function setPos():void {			if (fondino.height>Preferences.pref.h) {				fondino.height = Preferences.pref.h - 100;				txt.height = fondino.height-60			}			this.y=(Preferences.pref.h-fondino.height)/2			this.x=(Preferences.pref.w-fondino.width)/2		}		public function svuota():void {			fondino.alpha = 1;			tit.htmlText = dat.htmlText = dur.htmlText = aut.htmlText = txt.htmlText = cat.htmlText = "";			if (loadingProgress) {				imgLoader.close();			} else {				imgLoader.unload();			}		}		private function putZero(str):String {			return (str.toString().length < 2 ? "0"+str : str);		}		private function mouseDownHandler(event:Event):void {			fnz(n);		}		private function mouseOverHandler(event:Event):void {			img.alpha = .5;		}		private function mouseOutHandler(event:Event):void {			img.alpha = 1;		}		private function initHandlerSWF(event:Event):void {			loadingProgress = false;			enable()		}		private function errorHandlerSWF(event:Event):void {			trace("error "+event)		}		public function enable() {			img.mouseChildren = false;			img.addEventListener(MouseEvent.MOUSE_DOWN,mouseDownHandler);			img.addEventListener(MouseEvent.MOUSE_OVER,mouseOverHandler);			img.addEventListener(MouseEvent.MOUSE_OUT,mouseOutHandler);			img.buttonMode=true;		}		public function disable() {			img.removeEventListener(MouseEvent.MOUSE_DOWN,mouseDownHandler);			img.removeEventListener(MouseEvent.MOUSE_OVER,mouseOverHandler);			img.removeEventListener(MouseEvent.MOUSE_OUT,mouseOutHandler);			img.buttonMode=false;			mouseOutHandler(null);		}	}}